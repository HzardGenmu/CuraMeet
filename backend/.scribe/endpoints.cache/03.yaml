## Autogenerated by Scribe. DO NOT MODIFY.

name: Patients
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/patients/search
    metadata:
      groupName: Patients
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Search Patients by Name'
      description: 'Searches for patients by their full name (partial match supported).'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      name:
        name: name
        description: 'Part or full name of the patient to search.'
        required: true
        example: John
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      name: John
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "patients": [
              {
                "id": 1,
                "user_id": 1,
                "NIK": "1234567890123456",
                "full_name": "John Doe",
                "picture": "patient.jpg",
                "allergies": "Peanuts",
                "disease_histories": "Asthma",
                "email": "patient@example.com",
                "phone": "08123456789",
                "address": "123 Main St"
              }
            ],
            "count": 1
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/patients/{patientId}'
    metadata:
      groupName: Patients
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Patient by ID'
      description: 'Retrieves patient information by patient ID.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      patientId:
        name: patientId
        description: 'The ID of the patient.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      patientId: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "patient": {
              "id": 1,
              "user_id": 1,
              "NIK": "1234567890123456",
              "full_name": "John Doe",
              "picture": "patient.jpg",
              "allergies": "Peanuts",
              "disease_histories": "Asthma",
              "email": "patient@example.com",
              "phone": "08123456789",
              "address": "123 Main St",
              "user": {
                "id": 1,
                "name": "John Doe",
                "email": "patient@example.com",
                "role": "patient"
              }
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Patient not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/patients/user/{userId}'
    metadata:
      groupName: Patients
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Patient by User ID'
      description: 'Retrieves patient information by user ID.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      userId:
        name: userId
        description: 'The user ID of the patient.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      userId: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "patient": {
              "id": 1,
              "user_id": 1,
              "NIK": "1234567890123456",
              "full_name": "John Doe",
              "picture": "patient.jpg",
              "allergies": "Peanuts",
              "disease_histories": "Asthma",
              "email": "patient@example.com",
              "phone": "08123456789",
              "address": "123 Main St",
              "user": {
                "id": 1,
                "name": "John Doe",
                "email": "patient@example.com",
                "role": "patient"
              }
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Patient not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/patients/{patientId}/profile/fill'
    metadata:
      groupName: Patients
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Patient Personal Data'
      description: |-
        VULNERABILITY 33: Mass assignment vulnerability (no input filtering).
        VULNERABILITY 34: Missing authorization check in controller layer.

        Allows updating patient personal information.
        Authorization is checked in service layer, but vulnerable to mass assignment.
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      patientId:
        name: patientId
        description: 'The ID of the patient to update.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      patientId: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Full name of the patient.'
        required: true
        example: 'John Smith'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 'Email address.'
        required: true
        example: johnsmith@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      phone:
        name: phone
        description: 'Phone number.'
        required: true
        example: '08198765432'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      address:
        name: address
        description: 'Home address.'
        required: true
        example: '456 Oak Avenue'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      nik:
        name: nik
        description: 'National ID number.'
        required: true
        example: '9876543210987654'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'John Smith'
      email: johnsmith@example.com
      phone: '08198765432'
      address: '456 Oak Avenue'
      nik: '9876543210987654'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "success": false,
            "message": "Unauthorized"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/patients/{patientId}/statistics'
    metadata:
      groupName: Patients
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'View Patient Statistics'
      description: |-
        VULNERABILITY 35: Statistics endpoint with SQL injection vulnerability.
        VULNERABILITY 36: No rate limiting on data-heavy operations.
        VULNERABILITY 37: Exposes aggregated medical data without proper authorization.

        Returns patient medical visit statistics and disease history.
        Allows filtering by date range.
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      patientId:
        name: patientId
        description: 'The ID of the patient (vulnerable to SQL injection).'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      patientId: 1
    queryParameters:
      date_from:
        name: date_from
        description: 'optional Start date for statistics (Y-m-d format).'
        required: false
        example: '2024-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      date_to:
        name: date_to
        description: 'optional End date for statistics (Y-m-d format).'
        required: false
        example: '2024-12-31'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      date_from: '2024-01-01'
      date_to: '2024-12-31'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "statistics": [
              {
                "total_visits": 5,
                "disease_name": "Hypertension"
              },
              {
                "total_visits": 3,
                "disease_name": "Diabetes"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/patients/profile/now
    metadata:
      groupName: Patients
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Current Patient Profile'
      description: |-
        Returns the authenticated patient's profile information.
        Requires valid authentication token.
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "patient": {
              "id": 1,
              "user_id": 1,
              "NIK": "1234567890123456",
              "full_name": "John Doe",
              "picture": "patient.jpg",
              "allergies": "Peanuts",
              "disease_histories": "Asthma",
              "email": "patient@example.com",
              "phone": "08123456789",
              "address": "123 Main St",
              "user": {
                "id": 1,
                "name": "John Doe",
                "email": "patient@example.com",
                "role": "patient"
              }
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "success": false,
            "message": "Token not provided"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "success": false,
            "message": "Invalid or expired token"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Patient not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
