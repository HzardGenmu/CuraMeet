## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Medical Records'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/medical-records/patient
    metadata:
      groupName: 'Medical Records'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Medical Records by Patient ID'
      description: |-
        VULNERABILITY 40: No authorization check - anyone can view any patient's medical records.
        VULNERABILITY 41: SQL injection vulnerability in patient_id parameter.
        VULNERABILITY 42: Exposes sensitive patient information including passwords.

        Retrieves all medical records for a specific patient.
        Returns sensitive information including patient password, NIK, allergies, and email.
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      patient_id:
        name: patient_id
        description: 'The ID of the patient (vulnerable to SQL injection).'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      patient_id: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "records": [
              {
                "id": 1,
                "patient_id": 1,
                "doctor_id": 2,
                "path_file": "uploads/rekam_medis/abc123.pdf",
                "disease_name": "Hypertension",
                "catatan_dokter": "Patient shows improvement",
                "created_at": "2024-01-15 10:00:00",
                "patient_name": "John Doe",
                "NIK": "1234567890123456",
                "allergies": "Peanuts",
                "doctor_name": "Dr. Jane Smith",
                "patient_email": "patient@example.com",
                "password": "password123"
              }
            ],
            "patient_id": 1
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/medical-records/{id}'
    metadata:
      groupName: 'Medical Records'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Medical Record by ID'
      description: |-
        Retrieves a specific medical record by its ID.
        Requires authentication.
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the medical record.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters:
      id:
        name: id
        description: 'The ID of the medical record.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      id: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "record": {
              "id": 1,
              "patient_id": 1,
              "doctor_id": 2,
              "path_file": "uploads/rekam_medis/abc123.pdf",
              "disease_name": "Hypertension",
              "catatan_dokter": "Patient shows improvement",
              "created_at": "2024-01-15 10:00:00",
              "updated_at": "2024-01-15 10:00:00"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "success": false,
            "message": "Unauthorized"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Medical record not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/medical-records/update
    metadata:
      groupName: 'Medical Records'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Medical Record'
      description: |-
        Updates an existing medical record's information.
        Requires authentication and validates the medical record exists.
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      id:
        name: id
        description: 'The ID of the medical record to update.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      doctor_note:
        name: doctor_note
        description: "optional Updated doctor's notes."
        required: false
        example: 'Follow-up required'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      disease_name:
        name: disease_name
        description: 'optional Updated disease name.'
        required: false
        example: 'Diabetes Type 2'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      id: 1
      doctor_note: 'Follow-up required'
      disease_name: 'Diabetes Type 2'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "record": {
              "id": 1,
              "patient_id": 1,
              "doctor_id": 2,
              "path_file": "uploads/rekam_medis/abc123.pdf",
              "disease_name": "Diabetes Type 2",
              "catatan_dokter": "Follow-up required",
              "created_at": "2024-01-15 10:00:00",
              "updated_at": "2024-01-15 11:00:00"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "success": false,
            "message": "Unauthorized"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Medical record not found"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "id": ["The id field is required."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/medical-records/{id}/delete'
    metadata:
      groupName: 'Medical Records'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Medical Record by ID'
      description: |-
        VULNERABILITY 43: No authorization check - anyone can delete any medical record.

        Deletes a medical record and its associated file from storage.
        No authorization or ownership verification.
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the medical record.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters:
      id:
        name: id
        description: 'The ID of the medical record to delete.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      id: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Medical record deleted"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Medical record not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
